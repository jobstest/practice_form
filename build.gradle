plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.10.0"
}

group 'com.gmail.jobstest18'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def allureVersion = "2.19.0",
    selenideVersion = "6.7.3",
    junitVersion = "5.9.0",
    slf4jVersion = "2.0.0",
    fakerVersion = "1.0.2",
    hamcrestAllVersion = "1.3",
    assertjVersion = "3.23.1",
    xlsVersion = "1.4.0",
    opencsvVersion = "5.6",
    pdfVersion = "1.7.0",
    ownerVersion = "1.0.12"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

compileTestJava {
    options.encoding = 'UTF-8'
}

compileJava {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

dependencies {
    testImplementation ("com.codeborne:selenide:$selenideVersion",
                        "org.junit.jupiter:junit-jupiter:$junitVersion",
                        "org.slf4j:slf4j-simple:$slf4jVersion",
                        "com.github.javafaker:javafaker:$fakerVersion",
                        "io.qameta.allure:allure-selenide:$allureVersion",
                        "org.hamcrest:hamcrest-all:$hamcrestAllVersion",
                        "org.assertj:assertj-core:$assertjVersion",
                        "com.codeborne:xls-test:$xlsVersion",
                        "com.opencsv:opencsv:$opencsvVersion",
                        "org.aeonbits.owner:owner-java8:$ownerVersion"
    )
    testImplementation("com.codeborne:pdf-test:$pdfVersion") {
        exclude group: "org.apache.poi"
    }

    testRuntimeOnly("org.junit.jupiter:junit-jupiter-api:$junitVersion",
                    "org.slf4j:slf4j-simple:$slf4jVersion"
    )
}

allure {
    report {
        version.set(allureVersion)  // версия Allure Report (https://github.com/allure-framework/allure2)
    }
    adapter {
        aspectjWeaver.set(true) // обработка аннотации @Step - класс WebSteps
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion) // версия Allure Junit5 (https://github.com/allure-framework/allure-java)
            }
        }
    }
}

test {
    useJUnitPlatform()
}

task practice_form_tests(type: Test) {
    useJUnitPlatform {
        includeTags "practice_form"
//        excludeTags "simple"
    }
}

task test5(type: Test) {
    useJUnitPlatform {
        includeTags "test5"
    }
}

task system_properties(type: Test) {
    useJUnitPlatform {
        includeTags "system"
    }
}

task owner_properties(type: Test) {
    useJUnitPlatform {
        includeTags "owner"
    }
}

task parametr(type: Test) {
    useJUnitPlatform {
        includeTags "parametr"
    }
}